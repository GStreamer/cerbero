 # -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

from pathlib import Path


class Recipe(recipe.Recipe):
    name = 'x265-12bit'
    version = '3.6'
    licenses = [License.GPLv2Plus]
    stype = SourceType.CUSTOM
    btype = BuildType.CMAKE
    library_type = LibraryType.STATIC
    cmake_generator = 'ninja'
    can_msvc = True
    configure_options = ' -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DHIGH_BIT_DEPTH=ON -DMAIN12=ON -DEXPORT_C_API=OFF -DCMAKE_POLICY_VERSION_MINIMUM=3.5 '
    deps = ['x265-src']

    # files_libs = ['libx265-12bit']

    def prepare(self):
        if self.config.target_platform == Platform.ANDROID:
            self.append_env('CXXFLAGS', '-frtti', '-fexceptions')
            if self.config.target_arch != Architecture.X86_64:
                # Arm64 assembly is completely incompatible
                self.configure_options += ' -DENABLE_ASSEMBLY=OFF '
        # x265 ignores CCASFLAGS
        elif Platform.is_apple_mobile(self.config.target_platform):
            self.configure_options += ' -DENABLE_ASSEMBLY=OFF '
        elif self.config.target_arch == Architecture.X86:
            # on x86 it tries to use the high bank of AVX
            self.configure_options += ' -DENABLE_ASSEMBLY=OFF '
        self.config_src_dir = os.path.join(self.config.sources, f'x265-src-{self.version}', 'source')
        self.build_dir = os.path.join(self.config_src_dir, 'b-12bit')
        self.make_dir = self.config_src_dir
        Path(self.build_dir).mkdir(parents=True, exist_ok=True)

    # Set up the HDR library - DO NOT EXECUTE any kind of install
    async def install(self):
        prefix = '' if self.using_msvc() else 'lib'
        src = Path(self.build_dir) / f'{prefix}x265.a'
        dest = src.with_stem(f"{'' if self.using_msvc() else 'lib'}{self.name}")
        src.replace(dest)
