# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
from cerbero.tools.libtool import LibtoolLibrary


class Recipe(recipe.Recipe):

    name = 'tinyalsa'
    version = '2.0.0'
    licenses = [{License.BSD_like: ['NOTICE']}]
    stype = SourceType.TARBALL
    btype = BuildType.MESON
    url = f'https://github.com/tinyalsa/tinyalsa/archive/refs/tags/v{version}.tar.gz'
    tarball_checksum = '573ae0b2d3480851c1d2a12503ead2beea27f92d44ed47b74b553ba947994ef1'

    patches = [
        # https://github.com/tinyalsa/tinyalsa/pull/216
        f'{name}/0001-meson-add-attributes-h-and-plugin-h.patch',
    ]

    meson_options = {
        'docs': 'disabled',
        'examples': 'disabled',
        'utils': 'disabled',
    }

    files_libs = [ 'libtinyalsa' ]

    files_devel = [ 'include/tinyalsa', '%(libdir)s/pkgconfig/tinyalsa.pc' ]

    def prepare(self):
        if self.config.target_platform not in (Platform.LINUX, Platform.ANDROID):
            raise InvalidRecipeError(self, "Invalid platform") 
        # ALSA
        self.use_system_libs = not self.config.cross_compiling()

    def post_install(self):
        LibtoolLibrary('tinyalsa', 2, 0, 0, self.config.libdir,
                self.config.target_platform).save()
        super().post_install()
