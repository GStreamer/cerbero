# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
from cerbero.tools.libtool import LibtoolLibrary

class Recipe(recipe.Recipe):
    name = 'pango'
    version = '1.54.0'
    stype = SourceType.TARBALL
    btype = BuildType.MESON
    url = 'gnome://'
    tarball_checksum = '8a9eed75021ee734d7fc0fdf3a65c3bba51dfefe4ae51a9b414a60c70b2d1ed8'
    licenses = [License.LGPLv2Plus]
    deps = ['cairo', 'fontconfig', 'freetype', 'fribidi', 'harfbuzz']
    patches = [
      # https://gitlab.gnome.org/GNOME/pango/-/merge_requests/673 (merged after 1.54.0)
      'pango/0001-pango-layout-fix-build-with-Android-s-bionic-libc.patch',
      # TODO: propose upstream for merging
      'pango/0002-utils-Check-that-help2man-can-run-if-found.patch',
      # https://gitlab.gnome.org/GNOME/pango/-/merge_requests/749
      'pango/0003-win32-Don-t-un-define-STRICT.patch',
      # https://gitlab.gnome.org/GNOME/pango/-/merge_requests/768
      'pango/0004-win32-Define-_WIN32_WINNT-globally.patch',
      'pango/0005-win32-Require-Windows-10.patch',
      'pango/0006-win32-Require-dwrite_3.h.patch',
      'pango/0007-win32-Clean-up-directwrite-code.patch',
   ]

    files_libs = ['libpangocairo-1.0', 'libpango-1.0']
    files_bins = ['pango-view']
    files_devel = ['include/pango-1.0',
        '%(libdir)s/pkgconfig/pango.pc',
        '%(libdir)s/pkgconfig/pangocairo.pc']
    platform_files_libs = {
        Platform.WINDOWS: ['libpangowin32-1.0'],
    }
    platform_files_devel = {
        Platform.WINDOWS: ['%(libdir)s/pkgconfig/pangowin32.pc'],
        Platform.LINUX: ['%(libdir)s/pkgconfig/pango.pc'],
    }
    files_typelibs = [
        'Pango-1.0',
        'PangoCairo-1.0',
    ]

    def prepare(self):
        if self.config.target_platform == Platform.WINDOWS:
            # Allow using Win10 APIs if dwrite_3.h is found
            self.append_env('CFLAGS', '-U_WIN32_WINNT')

        if self.config.target_platform in [Platform.LINUX, Platform.IOS, Platform.ANDROID]:
            self.files_libs.append('libpangoft2-1.0')
            self.files_devel.append('%(libdir)s/pkgconfig/pangoft2.pc')
            self.files_devel.append('PangoFT2-1.0')

    def post_install(self):
        LibtoolLibrary('pango-1.0', None, None, None, self.config.libdir,
                self.config.target_platform, deps=['gobject-2.0', 'fribidi', 'harfbuzz', 'fontconfig', 'expat', 'freetype', 'bz2', 'png16']).save()
        pangocairo_deps = ['pango-1.0', 'cairo', 'pixman-1']
        if self.config.target_platform in [Platform.LINUX, Platform.IOS, Platform.ANDROID]:
            pangocairo_deps.append('pangoft2-1.0')
            LibtoolLibrary('pangoft2-1.0', None, None, None, self.config.libdir,
                    self.config.target_platform, deps=['pango-1.0', 'harfbuzz', 'fontconfig', 'expat', 'freetype', 'bz2', 'png16']).save()
        LibtoolLibrary('pangocairo-1.0', None, None, None, self.config.libdir,
                self.config.target_platform, deps=pangocairo_deps).save()
        if self.config.target_platform == Platform.WINDOWS:
            LibtoolLibrary('pangowin32-1.0', None, None, None, self.config.libdir,
                    self.config.target_platform, deps=['pango-1.0', 'cairo']).save()
        super().post_install()
