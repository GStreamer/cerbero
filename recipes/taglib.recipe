# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import shutil

from cerbero.tools.libtool import LibtoolLibrary

class Recipe(recipe.Recipe):
    name = 'taglib'
    version = '1.13.1'
    stype = SourceType.TARBALL
    url = 'https://github.com/taglib/taglib/releases/download/v1.13.1/taglib-%(version)s.tar.gz'
    tarball_checksum = 'c8da2b10f1bfec2cd7dbfcd33f4a2338db0765d851a50583d410bacf055cfd0b'
    # either LGPLv2.1 or MPLv1.1
    licenses = [License.LGPLv2_1Plus, License.MPLv1_1]

    btype = BuildType.CMAKE
    configure_options = '-DWITH_MP4=ON \
        -DWITH_ASF=ON \
        -DCMAKE_DISABLE_FIND_PACKAGE_Boost=TRUE'
    deps = ['zlib']

    can_msvc = True
    cmake_generator = 'ninja'

    patches = [
        'taglib/0002-Build-a-static-and-non-static-version.patch',
        'taglib/0003-Require-CMake-version-3.5-1148.patch',
    ]

    files_libs = ['libtag']
    files_devel = ['include/taglib', '%(libdir)s/pkgconfig/taglib.pc']

    def prepare(self):
        if self.config.target_platform == Platform.WINDOWS:
            self.configure_options += ' -DWIN32=1'
        if self.config.target_platform == Platform.ANDROID:
            # configure for android
            self.append_env('CXXFLAGS', '-frtti', '-fexceptions')
        self.configure_options += ' -DZLIB_ROOT=%s ' % self.config.prefix

    async def install(self):
        await super(recipe.Recipe, self).install()
        if self.using_msvc():
            stlib_name = 'tag_static.lib'
        else:
            stlib_name = 'libtag_static.a'
        shutil.move(
                os.path.join(self.config.libdir, stlib_name),
                os.path.join(self.config.libdir, 'libtag.a'))

    def post_install(self):
        deps = ['z']
        libtool_la = LibtoolLibrary('tag', 1, 7, None, self.config.libdir,
                self.config.target_platform, deps)
        libtool_la.save()
        super().post_install()
