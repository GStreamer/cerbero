# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import os

from cerbero.utils import shell


class Recipe(recipe.Recipe):
    name = 'vsintegration-1.0'
    version = '0.1'
    licenses = [License.LGPLv2_1Plus]
    btype = BuildType.CUSTOM
    stype = SourceType.CUSTOM
    deps = ['gstreamer-1.0', 'gst-plugins-base-1.0', 'gst-plugins-good-1.0',
        'gst-plugins-ugly-1.0', 'gst-plugins-bad-1.0', 'gst-libav-1.0',
        'gst-devtools-1.0', 'gst-rtsp-server-1.0', 'gst-editing-services-1.0'
    ]
    # This only needs to install the support files -- the rest go
    # into the Visual Studio template component
    vsprefix = 'share/vs/2010'
    files_devel = []

    def prepare(self):
        self.files_devel += [
            f'{self.vsprefix}/libs',
            f'{self.vsprefix}/msvc',
            f'{self.vsprefix}/gst-sdk-template'
        ]
        for year, _ in self.years.items():
            self.files_devel.append(f"{self.vsprefix.replace('2010', year)}/wizard")

    years = {
        '2015': '14.0',
        '2017': '15.0',
        '2019': '16.0',
        '2022': '17.0',
    }

    async def install(self):
        import shutil
        from cerbero.commands.genvsprops import GenVSProps
        # archdir has to be toolchain-specific: mingw_x86_64, uwp-debug_arm64, etc
        platform_arch = '_'.join(self.config._get_toolchain_target_platform_arch())
        env_var = ('GSTREAMER_1_0_ROOT_' + platform_arch).upper()
        vspropsdir =  os.path.join(self.config.prefix, self.vsprefix, 'libs')
        if not os.path.exists(vspropsdir):
            os.makedirs(vspropsdir)
        genvsprops = GenVSProps()
        genvsprops.runargs(self.config, vspropsdir, env_var, logfile=self.logfile)
        # Copy msvc
        propsdir = os.path.join(self.config.prefix, self.vsprefix, 'msvc')
        if not os.path.exists(propsdir):
            os.makedirs(propsdir)
        datapropsdir = os.path.join(self.config.data_dir, 'vs-1.0', 'msvc')
        for f in os.listdir(datapropsdir):
            path = os.path.join(datapropsdir, f)
            shutil.copy(path, os.path.join(propsdir, f))
        # Copy Wizard files
        for year, version in self.years.items():
            srcdir = os.path.join(self.config.data_dir, 'vs-1.0', 'wizard')
            dstdir = os.path.join(self.config.prefix, self.vsprefix.replace('2010', year), 'wizard')
            if not os.path.exists(dstdir):
                os.makedirs(dstdir)
            for f in os.listdir(srcdir):
                src = os.path.join(srcdir, f)
                dst = os.path.join(dstdir, f)
                shutil.copy(src, dst)
                if dst.endswith('.vsz'):
                    shell.replace(dst, {'10.0': version})
        # Copy Wizard template files
        propsdir = os.path.join(self.config.prefix, self.vsprefix, 'gst-sdk-template')
        if os.path.exists(propsdir):
            shutil.rmtree(propsdir)
        datapropsdir = os.path.join(self.config.data_dir, 'vs-1.0', 'gst-sdk-template')
        shutil.copytree(datapropsdir, propsdir)
