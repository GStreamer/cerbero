# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
from pathlib import Path
from cerbero.tools.libtool import LibtoolLibrary

class Recipe(recipe.Recipe):
    name = 'svt-jpeg-xs'
    version = '0.9.0'
    licenses = [{License.BSD_like: ['LICENSE.md']}]
    stype = SourceType.TARBALL
    btype = BuildType.CMAKE
    cmake_generator = 'ninja'
    can_msvc = True
    url = 'https://github.com/OpenVisualCloud/SVT-JPEG-XS/archive/refs/tags/v%(version)s.tar.gz'
    tarball_dirname = 'SVT-JPEG-XS-%(version)s'
    tarball_checksum = 'ff5dfb3b98348a39049da4fd3062d3391cbadec4c4b61825a9f3435ca671effa'
    # third_party/cpuinfo has compatibility set to 2.8.12
    configure_options = [
        '-DNATIVE=OFF',
        '-DBUILD_APPS=OFF',
        '-DBUILD_TESTING=OFF',
        '-DCMAKE_POLICY_VERSION_MINIMUM=3.5'
    ]

    files_libs = ['libSvtJpegxs']
    files_devel = [
        'include/svt-jpegxs/',
        '%(libdir)s/pkgconfig/SvtJpegxs.pc'
    ]
    library_type = LibraryType.SHARED

    def prepare(self):
        if Platform.is_mobile(self.config.target_platform):
            self.library_type = LibraryType.STATIC

        if self.config.target_arch in (Architecture.X86, Architecture.X86_64):
            self.configure_options.append('-DENABLE_NASM=ON')


    # https://github.com/OpenVisualCloud/SVT-JPEG-XS/blob/e1030c6c8ee2fb05b76c3fa14cccf8346db7a1fa/Source/Lib/CMakeLists.txt#L91
    async def install(self):
        await super(Recipe, self).install()
        if self.config.target_platform == Platform.WINDOWS:
            lib = f"{'' if self.using_msvc() else 'lib'}SvtJpegxs.dll"
            src = Path(self.config.libdir) / lib
            src.replace(
                Path(self.config.prefix) / 'bin' / lib
            )

    def post_install(self):
        libtool_la = LibtoolLibrary('SvtJpegxs', None, None, None, self.config.libdir,
                self.config.target_platform, [])
        libtool_la.save()
        super().post_install()
