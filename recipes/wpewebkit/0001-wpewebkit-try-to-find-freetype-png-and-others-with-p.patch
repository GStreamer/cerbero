From 849d3010d7a89a69f875dd4b5b3f39ef77757719 Mon Sep 17 00:00:00 2001
From: Fernando Jimenez Moreno <fjimenez@igalia.com>
Date: Fri, 14 May 2021 13:19:00 +0200
Subject: [PATCH] wpewebkit: try to find freetype, png and others with
 pkg-config

---
 Source/cmake/WebKitFindPackage.cmake | 88 +++++++++++++++++++++++++++-
 1 file changed, 87 insertions(+), 1 deletion(-)

diff --git a/Source/cmake/WebKitFindPackage.cmake b/Source/cmake/WebKitFindPackage.cmake
index 7f6603bd..84be5f93 100644
--- a/Source/cmake/WebKitFindPackage.cmake
+++ b/Source/cmake/WebKitFindPackage.cmake
@@ -107,6 +107,55 @@ macro(find_package package)
               set(ICU_FOUND ON)
               set(_found_package ON)
           endif ()
+        elseif ("${package}" STREQUAL "Freetype")
+          find_package(PkgConfig)
+          pkg_check_modules(PC_FREETYPE freetype2)
+          set(FREETYPE_INCLUDE_DIRS ${PC_FREETYPE_INCLUDE_DIRS})
+          set(FREETYPE_LIBRARY ${PC_FREETYPE_LINK_LIBRARIES})
+          if (FREETYPE_INCLUDE_DIRS AND FREETYPE_LIBRARY)
+            set(FREETYPE_FOUND ON)
+            set(_found_package ON)
+          endif ()
+        elseif ("${package}" STREQUAL "JPEG")
+          find_package(PkgConfig)
+          pkg_check_modules(PC_JPEG libjpeg)
+          set(JPEG_INCLUDE_DIRS ${PC_JPEG_INCLUDE_DIRS})
+          set(JPEG_LIBRARY ${PC_JPEG_LINK_LIBRARIES})
+          if (JPEG_INCLUDE_DIRS AND JPEG_LIBRARY)
+            set(JPEG_FOUND ON)
+            set(_found_package ON)
+          endif ()
+        elseif ("${package}" STREQUAL "PNG")
+          find_package(PkgConfig)
+          pkg_check_modules(PC_PNG libpng16)
+          set(PNG_INCLUDE_DIRS ${PC_PNG_INCLUDE_DIRS})
+          set(PNG_LIBRARY ${PC_PNG_LIBRARY_DIRS}/libpng.so)
+          if (PNG_INCLUDE_DIRS AND PNG_LIBRARY)
+            set(PNG_FOUND ON)
+            set(_found_package ON)
+          endif ()
+        elseif ("${package}" STREQUAL "WebP")
+          find_package(PkgConfig)
+          pkg_check_modules(PC_WEBP libwebp)
+          set(WEBP_INCLUDE_DIRS ${PC_WEBP_INCLUDE_DIRS})
+          set(WEBP_LIBRARY ${PC_WEBP_LINK_LIBRARIES})
+          pkg_check_modules(PC_WEBP_DECODER libwebpdecoder)
+          set(WEBP_DECODER_INCLUDE_DIRS ${PC_WEBP_DECODER_INCLUDE_DIRS})
+          set(WEBP_DECODER_LIBRARY ${PC_WEBP_DECODER_LINK_LIBRARIES})
+          if (WEBP_INCLUDE_DIRS AND WEBP_LIBRARY AND WEBP_DECODER_INCLUDE_DIRS AND WEBP_DECODER_LIBRARY)
+            set(WEBP_FOUND ON)
+            set(_found_package ON)
+          endif ()
+        elseif ("${package}" STREQUAL "LibGcrypt")
+          find_package(PkgConfig)
+          pkg_check_modules(PC_LIBGCRYPT libgcrypt)
+          set(LIBGCRYPT_INCLUDE_DIRS ${PC_LIBGCRYPT_INCLUDE_DIRS})
+          pkg_check_modules(PC_WEBP libwebp)
+          set(LIBGCRYPT_LIBRARY ${PC_WEBP_LIBRARY_DIRS}/libgcrypt.so)
+          if (LILBGCRYPT_INCLUDE_DIRS AND LIBGCRYPT_LIBRARY)
+            set(LIBGCRYPT_FOUND ON)
+            set(_found_package ON)
+          endif ()
         endif ()
     endif ()
 
@@ -190,7 +239,7 @@ macro(find_package package)
         if (JPEG_FOUND AND NOT TARGET JPEG::JPEG)
             add_library(JPEG::JPEG UNKNOWN IMPORTED)
             set_target_properties(JPEG::JPEG PROPERTIES
-                IMPORTED_LOCATION "${JPEG_LIBRARIES}"
+                IMPORTED_LOCATION "${JPEG_LIBRARY}"
                 INTERFACE_INCLUDE_DIRECTORIES "${JPEG_INCLUDE_DIR}"
             )
         endif ()
@@ -202,5 +251,42 @@ macro(find_package package)
                 INTERFACE_INCLUDE_DIRECTORIES "${ZLIB_INCLUDE_DIRS}"
             )
         endif ()
+    elseif ("${package}" STREQUAL "Freetype")
+        if (FREETYPE_FOUND AND NOT TARGET Freetype::Freetype)
+            add_library(Freetype::Freetype UNKNOWN IMPORTED)
+            set_target_properties(Freetype::Freetype PROPERTIES
+                IMPORTED_LOCATION "${FREETYPE_LIBRARY}"
+                INTERFACE_INCLUDE_DIRECTORIES "${FREETYPE_INCLUDE_DIRS}"
+            )
+        endif ()
+    elseif ("${package}" STREQUAL "PNG")
+        if (PNG_FOUND AND NOT TARGET PNG::PNG)
+            add_library(PNG::PNG UNKNOWN IMPORTED)
+            set_target_properties(PNG::PNG PROPERTIES
+                IMPORTED_LOCATION "${PNG_LIBRARY}"
+                INTERFACE_INCLUDE_DIRECTORIES "${PNG_INCLUDE_DIRS}"
+            )
+        endif ()
+    elseif ("${package}" STREQUAL "WebP")
+        if (WEBP_FOUND AND NOT TARGET WebP::WebP)
+            add_library(WebP::WebP UNKNOWN IMPORTED)
+            set_target_properties(WebP::WebP PROPERTIES
+                IMPORTED_LOCATION "${WEBP_LIBRARY}"
+                INTERFACE_INCLUDE_DIRECTORIES "${WEBP_INCLUDE_DIRS}"
+            )
+            add_library(WebPDecoder::WebPDecoder UNKNOWN IMPORTED)
+            set_target_properties(WebPDecoder::WebPDecoder PROPERTIES
+                IMPORTED_LOCATION "${WEBP_DECODER_LIBRARY}"
+                INTERFACE_INCLUDE_DIRECTORIES "${WEBP_DECODER_INCLUDE_DIRS}"
+            )
+        endif ()
+    elseif ("${package}" STREQUAL "LibGcrypt")
+        if (LIBGCRYPT_FOUND AND NOT TARGET LibGcrypt::LibGcrypt)
+            add_library(LibGcrypt::LibGcrypt UNKNOWN IMPORTED)
+            set_target_properties(LibGcrypt::LibGcrypt PROPERTIES
+                IMPORTED_LOCATION "${LIBGCRYPT_LIBRARY}"
+                INTERFACE_INCLUDE_DIRECTORIES "${LIBGCRYPT_INCLUDE_DIRS}"
+            )
+        endif ()
     endif ()
 endmacro()
-- 
2.30.1

