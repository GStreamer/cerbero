From 36604fa2e6296e8df39f5b09405cce99166c4777 Mon Sep 17 00:00:00 2001
From: "zandobersek@gmail.com"
 <zandobersek@gmail.com@268f45cc-cd09-0410-ab3c-d52691b4dbfc>
Date: Mon, 16 Nov 2020 10:05:32 +0000
Subject: [PATCH xserver] PlatformDisplayLibWPE: use eglGetPlatformDisplay when
 possible https://bugs.webkit.org/show_bug.cgi?id=218941

Reviewed by Carlos Garcia Campos.

Use the existing wpe_renderer_backend_egl API to detect any desired
EGL platform that should be used to retrieve the global EGLDisplay
object. If such a platform is specified, the eglGetPlatformDisplay
entrypoing from the EGL_EXT_platform_base extension should be used
to retrieve the corresponding EGLDisplay.

If the API or the extension is not available, or if the EGLDisplay is
not retrieved this way, we fall back to eglGetDisplay.

* platform/graphics/libwpe/PlatformDisplayLibWPE.cpp:
(WebCore::PlatformDisplayLibWPE::initialize):


git-svn-id: http://svn.webkit.org/repository/webkit/trunk@269841 268f45cc-cd09-0410-ab3c-d52691b4dbfc
---
 Source/WebCore/ChangeLog                      | 19 +++++++++++++
 .../graphics/libwpe/PlatformDisplayLibWPE.cpp | 28 ++++++++++++++++++-
 2 files changed, 46 insertions(+), 1 deletion(-)

diff --git a/Source/WebCore/platform/graphics/libwpe/PlatformDisplayLibWPE.cpp b/Source/WebCore/platform/graphics/libwpe/PlatformDisplayLibWPE.cpp
index e6962a7346d1..debbfa319eae 100644
--- a/Source/WebCore/platform/graphics/libwpe/PlatformDisplayLibWPE.cpp
+++ b/Source/WebCore/platform/graphics/libwpe/PlatformDisplayLibWPE.cpp
@@ -46,6 +46,11 @@
 
 #include <wpe/wpe-egl.h>
 
+#ifndef EGL_EXT_platform_base
+#define EGL_EXT_platform_base 1
+typedef EGLDisplay (EGLAPIENTRYP PFNEGLGETPLATFORMDISPLAYEXTPROC) (EGLenum platform, void *native_display, const EGLint *attrib_list);
+#endif
+
 namespace WebCore {
 
 std::unique_ptr<PlatformDisplayLibWPE> PlatformDisplayLibWPE::create()
@@ -70,7 +75,28 @@ bool PlatformDisplayLibWPE::initialize(int hostFd)
 {
     m_backend = wpe_renderer_backend_egl_create(hostFd);
 
-    m_eglDisplay = eglGetDisplay(wpe_renderer_backend_egl_get_native_display(m_backend));
+    EGLNativeDisplayType eglNativeDisplay = wpe_renderer_backend_egl_get_native_display(m_backend);
+
+#if WPE_CHECK_VERSION(1, 1, 0)
+    uint32_t eglPlatform = wpe_renderer_backend_egl_get_platform(m_backend);
+    if (eglPlatform) {
+        using GetPlatformDisplayType = PFNEGLGETPLATFORMDISPLAYEXTPROC;
+        GetPlatformDisplayType getPlatformDisplay =
+            [] {
+                const char* extensions = eglQueryString(nullptr, EGL_EXTENSIONS);
+                if (GLContext::isExtensionSupported(extensions, "EGL_EXT_platform_base")
+                    || GLContext::isExtensionSupported(extensions, "EGL_KHR_platform_base"))
+                    return reinterpret_cast<GetPlatformDisplayType>(eglGetProcAddress("eglGetPlatformDisplay"));
+                return GetPlatformDisplayType(nullptr);
+            }();
+
+        if (getPlatformDisplay)
+            m_eglDisplay = getPlatformDisplay(eglPlatform, eglNativeDisplay, nullptr);
+    }
+#endif
+
+    if (m_eglDisplay == EGL_NO_DISPLAY)
+        m_eglDisplay = eglGetDisplay(eglNativeDisplay);
     if (m_eglDisplay == EGL_NO_DISPLAY) {
         WTFLogAlways("PlatformDisplayLibWPE: could not create the EGL display: %s.", GLContextEGL::lastErrorString());
         return false;
-- 
2.30.2

