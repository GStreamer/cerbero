# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

from cerbero.utils import messages as m
import shutil

from cerbero.tools.libtool import LibtoolLibrary

class Recipe(recipe.Recipe):
    name = 'pixman'
    version = '0.43.4'
    stype = SourceType.TARBALL
    btype = BuildType.MESON
    url = 'https://www.x.org/releases/individual/lib/pixman-%(version)s.tar.xz'
    tarball_checksum = '48d8539f35488d694a2fef3ce17394d1153ed4e71c05d1e621904d574be5df19'
    meson_options = {'openmp': 'disabled',
                     'gtk': 'disabled',
                     'libpng': 'disabled',
                     'demos' : 'disabled',
                     'tests' : 'disabled'}
    licenses = [{License.MIT: ['COPYING']}]
    patches = []

    files_libs = ['libpixman-1']
    files_devel = ['include/pixman-1', '%(libdir)s/pkgconfig/pixman-1.pc']

    def prepare(self):
        if self.config.target_arch in Architecture.ARMv7:
            self.meson_options['neon'] = 'enabled'
        if self.config.target_arch == Architecture.ARM64:
            self.meson_options['a64-neon'] = 'enabled'
        # clang from xcode has a known bug, avoid codepath that trigger it
        # More info : https://github.com/Homebrew/homebrew/issues/41056
        if self.config.target_platform in (Platform.DARWIN, Platform.IOS) and \
           self.config.target_arch in (Architecture.X86, Architecture.X86_64):
            self.meson_options['mmx'] = 'disabled'
        if self.config.target_platform == Platform.IOS:
            self.append_env('CFLAGS', '-DPIXMAN_NO_TLS')
        if self.config.target_platform == Platform.ANDROID:
            # FIXME: Fails to link because of undefined __builtin_* symbols
            self.meson_options['iwmmxt'] = 'disabled'
            self.meson_options['cpu-features-path'] = os.path.join(self.config.toolchain_prefix, 'sources', 'android', 'cpufeatures')
            # Prevent symbol conflicts
            self.append_env('CFLAGS',
                '-Dandroid_getCpuFamily=pixman_android_getCpuFamily',
                '-Dandroid_getCpuFeatures=pixman_android_getCpuFeatures',
                '-Dandroid_getCpuCount=pixman_android_getCpuCount',
                '-Dandroid_cpuInit=pixman_android_cpuInit',
                '-Dandroid_cpuInitDummy=pixman_android_cpuInitDummy',
                '-Dandroid_getCpuIdArm=pixman_android_getCpuIdArm',
                '-Dandroid_setCpu=pixman_android_setCpu',
                '-Dandroid_setCpuArm=pixman_android_setCpuArm')

    def post_install(self):
        pixman_deps = []
        # Meson does not generate la files
        LibtoolLibrary('pixman-1', None, None, None,
                self.config.libdir, self.config.target_platform,
                deps=pixman_deps).save()
        super().post_install()
