From f871f346f9af397a2e0ced987640fe9751319298 Mon Sep 17 00:00:00 2001
From: "L. E. Segovia" <amy@centricular.com>
Date: Fri, 15 Mar 2024 21:40:37 -0300
Subject: [PATCH 1/1] Add Meson build

Source: https://wrapdb.mesonbuild.com/v2/soundtouch_2.3.2-1/get_patch
---
 include/meson.build                 |  19 +++++
 meson.build                         | 121 ++++++++++++++++++++++++++++
 meson_options.txt                   |   9 +++
 source/Android-lib/meson.build      |  12 +++
 source/SoundStretch/meson.build     |  16 ++++
 source/SoundTouch/meson.build       |  48 +++++++++++
 source/SoundTouchDLL/meson.build    |  47 +++++++++++
 source/SoundTouchDLL/meson/afxres.h |   1 +
 source/meson.build                  |   6 ++
 9 files changed, 279 insertions(+)
 create mode 100644 include/meson.build
 create mode 100644 meson.build
 create mode 100644 meson_options.txt
 create mode 100644 source/Android-lib/meson.build
 create mode 100644 source/SoundStretch/meson.build
 create mode 100644 source/SoundTouch/meson.build
 create mode 100644 source/SoundTouchDLL/meson.build
 create mode 100644 source/SoundTouchDLL/meson/afxres.h
 create mode 100644 source/meson.build

diff --git a/include/meson.build b/include/meson.build
new file mode 100644
index 0000000..d19e1b3
--- /dev/null
+++ b/include/meson.build
@@ -0,0 +1,19 @@
+soundtouch_headers = files(
+    'BPMDetect.h',
+    'FIFOSampleBuffer.h',
+    'FIFOSamplePipe.h',
+    'STTypes.h',
+    'SoundTouch.h',
+)
+
+soundtouch_config_h = configure_file(
+    output: 'soundtouch_config.h',
+    configuration: conf,
+)
+
+soundtouch_includes = include_directories('.')
+
+install_headers(
+    [soundtouch_headers, soundtouch_config_h],
+    subdir: 'soundtouch'
+)
diff --git a/meson.build b/meson.build
new file mode 100644
index 0000000..5372da2
--- /dev/null
+++ b/meson.build
@@ -0,0 +1,121 @@
+project(
+    'soundtouch',
+    'c', 'cpp',
+    version: '2.3.2',
+    license: 'LGPL-2.1-or-later',
+    default_options: [
+        'debug=true',
+        'optimization=3',
+        'c_std=c11',
+        # to avoid Meson's warning under MSVC
+        'cpp_std=c++14',
+        # See below ("ST_NO_EXCEPTION_HANDLING") for the rationale
+        'cpp_eh=default',
+        'pkgconfig.relocatable=true',
+    ],
+    meson_version: '>= 0.52',
+)
+
+cpp = meson.get_compiler('cpp')
+system = host_machine.system()
+cpu = host_machine.cpu()
+
+openmp = dependency('openmp', required: get_option('openmp'))
+m = cpp.find_library('m', required: false)
+
+soundtouch_args = []
+
+conf = configuration_data()
+
+# Autotools applies -Ofast (implies -O3 -ffast-math) to allow gcc
+# autovectorization generate effective SIMD code.
+# I prefer here to do so only with these to avoid surprises
+# at lower levels. -- amyspark
+if get_option('optimization') in ['2', '3', 's']
+    soundtouch_args += cpp.get_supported_arguments(
+        '/fp:fast',
+        '-ffast-math',
+    )
+endif
+
+is_android_softfp = cpp.compiles('''
+#if defined(__SOFTFP__) && defined(ANDROID)
+#else
+#error "Not under Android soft FP"
+#endif''', name: 'targeting Android with soft float implementation')
+
+if get_option('integer_samples')
+    conf.set('SOUNDTOUCH_INTEGER_SAMPLES', 1)
+    soundtouch_args += ['-DSOUNDTOUCH_INTEGER_SAMPLES=1']
+else
+    conf.set('SOUNDTOUCH_FLOAT_SAMPLES', 1)
+    soundtouch_args += ['-DSOUNDTOUCH_FLOAT_SAMPLES=1']
+endif
+
+neon_cpu = cpu in ['arm', 'aarch64']
+
+# Use ARM instruction set instead of Thumb for improved calculation performance in ARM CPUs	
+if cpu == 'arm' and system == 'android'
+    if cpp.get_define('__thumb__') != ''
+        soundtouch_args += cpp.get_supported_arguments('-marm')
+    endif
+endif
+
+if neon_cpu and get_option('neon')
+    conf.set('SOUNDTOUCH_USE_NEON', 1)
+    soundtouch_args += ['-DSOUNDTOUCH_USE_NEON=1']
+    soundtouch_args += cpp.get_supported_arguments('-mfpu=neon')
+endif
+
+# GCC, by default, handles exceptions in C++ sources as /EHsc, allowing
+# exceptions intra C++ code, and terminating the app on hitting a C function's
+# stack.
+# Grep ST_NO_EXCEPTION_HANDLING and see:
+# https://learn.microsoft.com/en-us/cpp/build/reference/eh-exception-handling-model?view=msvc-170
+# https://gcc.gnu.org/onlinedocs/gcc/Code-Gen-Options.html#index-fexceptions
+#
+# However, -fexceptions in Application.mk must be manually injected, as
+# their toolchain does not add it for historical reasons.
+# https://developer.android.com/ndk/guides/cpp-support?hl=es-419
+if get_option('cpp_eh') in ['none']
+    soundtouch_args += ['-DST_NO_EXCEPTION_HANDLING']
+elif system == 'android'
+    soundtouch_args += cpp.get_supported_arguments('-fexceptions')
+endif
+
+# Work around Android Clang / MS Clang not defining __GNUC__
+# This affects cpuid detection in x86 and x64 targets
+# Amyspark: careful with this flag, it may interfere with STTypes.h
+if cpp.get_define('__clang__') != '' and cpp.get_define('__GNUC__') == ''
+    soundtouch_args += cpp.get_supported_arguments('-fgnuc-version=10')
+endif
+
+# Amyspark: Turn off certain warnings that can trigger Werror
+soundtouch_args += cpp.get_supported_arguments(
+    '-Wno-unused-variable',
+    '-Wno-sign-compare',
+    '-Wno-unused-but-set-variable',
+    '-Wno-inconsistent-missing-override',
+    '-Wno-unused-const-variable',
+)
+
+if cpu == 'x86'
+    soundtouch_args += cpp.get_supported_arguments('-mstackrealign')
+endif
+
+deps = [
+    openmp,
+    m,
+]
+
+subdir('include')
+subdir('source')
+
+pkg = import('pkgconfig')
+
+pkg.generate(
+    soundtouch_lib,
+    name: 'SoundTouch',
+    description: 'SoundTouch is an open-source audio processing library for changing the Tempo, Pitch and Playback Rates of audio streams or files',
+    filebase: 'soundtouch'
+)
diff --git a/meson_options.txt b/meson_options.txt
new file mode 100644
index 0000000..091e335
--- /dev/null
+++ b/meson_options.txt
@@ -0,0 +1,9 @@
+option('integer_samples', type: 'boolean', value: false, description: 'Use integers instead of floats for samples')
+
+option('neon', type: 'boolean', value: true, description: 'Use ARM Neon SIMD instructions if in ARM CPU')
+
+option('soundtouch_dll', type: 'boolean', value: true, description: 'Build SoundTouchDLL C wrapper library.')
+
+option('soundstretch', type: 'boolean', value: false, description: 'Build soundstretch command line utility.')
+
+option('openmp', type: 'feature', value: 'disabled', description: 'Use parallel multicore calculation through OpenMP')
diff --git a/source/Android-lib/meson.build b/source/Android-lib/meson.build
new file mode 100644
index 0000000..62f15ea
--- /dev/null
+++ b/source/Android-lib/meson.build
@@ -0,0 +1,12 @@
+soundtouch_sources_android = files(
+    'jni/soundtouch-jni.cpp',
+)
+
+log = cpp.find_library('log', required: true)
+
+deps += [log]
+
+soundtouch_args += cpp.get_supported_arguments(
+    '-fdata-sections',
+    '-ffunction-sections',
+)
diff --git a/source/SoundStretch/meson.build b/source/SoundStretch/meson.build
new file mode 100644
index 0000000..560ae59
--- /dev/null
+++ b/source/SoundStretch/meson.build
@@ -0,0 +1,16 @@
+soundstretch_sources = files(
+    'main.cpp',
+    'RunParameters.cpp',
+    'WavFile.cpp',
+)
+
+if get_option('soundstretch')
+    soundstretch_bin = executable(
+        'soundstretch',
+        soundstretch_sources,
+        cpp_args: soundtouch_args,
+        include_directories: include_directories('.'),
+        dependencies: soundtouch_dep,
+        install: true,
+    )
+endif
diff --git a/source/SoundTouch/meson.build b/source/SoundTouch/meson.build
new file mode 100644
index 0000000..a4a246b
--- /dev/null
+++ b/source/SoundTouch/meson.build
@@ -0,0 +1,48 @@
+soundtouch_sources = files(
+    'AAFilter.cpp',
+    'BPMDetect.cpp',
+    'cpu_detect_x86.cpp',
+    'FIFOSampleBuffer.cpp',
+    'FIRFilter.cpp',
+    'InterpolateCubic.cpp',
+    'InterpolateLinear.cpp',
+    'InterpolateShannon.cpp',
+    'mmx_optimized.cpp',
+    'PeakFinder.cpp',
+    'RateTransposer.cpp',
+    'SoundTouch.cpp',
+    'sse_optimized.cpp',
+    'TDStretch.cpp',
+)
+
+# This library requires WINDOWS_EXPORT_ALL_SYMBOLS to export all the relevant
+# classes. That's beyond mindbending to do for C++, see how it's done:
+# https://github.com/Kitware/CMake/blob/master/Source/bindexplib.cxx#L237
+if system in ['windows', 'cygwin']
+    soundtouch_lib = static_library(
+        'SoundTouch',
+        soundtouch_sources,
+        cpp_args: soundtouch_args,
+        dependencies: deps,
+        include_directories: soundtouch_includes,
+        install: true
+    )
+else
+    soundtouch_lib = library(
+        'SoundTouch',
+        soundtouch_sources,
+        cpp_args: soundtouch_args,
+        dependencies: deps,
+        include_directories: soundtouch_includes,
+        version: meson.project_version(),
+        # DO NOT CHANGE THIS, SEE ABOVE!
+        # Also the Android.mk file was designed for GCC, not Clang (API 17+)
+        gnu_symbol_visibility: 'default',
+        install: true
+    )
+endif
+
+soundtouch_dep = declare_dependency(
+    link_with: soundtouch_lib,
+    include_directories: soundtouch_includes,
+)
diff --git a/source/SoundTouchDLL/meson.build b/source/SoundTouchDLL/meson.build
new file mode 100644
index 0000000..af142e5
--- /dev/null
+++ b/source/SoundTouchDLL/meson.build
@@ -0,0 +1,47 @@
+soundtouch_dll_sources = files(
+    'SoundTouchDLL.cpp',
+)
+
+soundtouch_dll_includes = files(
+    'SoundTouchDLL.h',
+)
+
+soundtouch_dll_include_directories = [include_directories('.')]
+
+windows = import('windows')
+
+if system in ['windows', 'cygwin']
+    if not cpp.has_header('afxres.h')
+        # Work around lack of afxres.h (ATL/MFC component missing in MSVS)
+        soundtouch_dll_include_directories += [include_directories('meson')]
+    endif
+
+    soundtouch_dll_sources += windows.compile_resources(
+        files(
+            'SoundTouchDLL.rc'
+        ),
+        include_directories: soundtouch_dll_include_directories
+    )
+endif
+
+if get_option('soundtouch_dll')
+    soundtouch_dll_args = [soundtouch_args, '-DDLL_EXPORTS']
+
+    soundtouch_dll_lib = shared_library(
+        'SoundTouchDLL',
+        soundtouch_dll_sources,
+        cpp_args: soundtouch_dll_args,
+        include_directories: soundtouch_dll_include_directories,
+        dependencies: soundtouch_dep,
+        gnu_symbol_visibility: 'inlineshidden',
+    )
+
+    soundtouch_dll_dep = declare_dependency(
+        link_with: soundtouch_dll_lib,
+    )
+
+    install_headers(
+        soundtouch_dll_includes,
+        subdir: 'soundtouch',
+    )
+endif
diff --git a/source/SoundTouchDLL/meson/afxres.h b/source/SoundTouchDLL/meson/afxres.h
new file mode 100644
index 0000000..f6d2545
--- /dev/null
+++ b/source/SoundTouchDLL/meson/afxres.h
@@ -0,0 +1 @@
+#include <windows.h>
diff --git a/source/meson.build b/source/meson.build
new file mode 100644
index 0000000..f59e855
--- /dev/null
+++ b/source/meson.build
@@ -0,0 +1,6 @@
+if system == 'android'
+    subdir('Android-lib')
+endif
+subdir('SoundTouch')
+subdir('SoundStretch')
+subdir('SoundTouchDLL')
-- 
2.42.0.windows.2

