# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
from cerbero.tools.libtool import LibtoolLibrary


class Recipe(recipe.Recipe):
    name = 'spandsp'
    version = '0.0.6'
    stype = SourceType.TARBALL
    btype = BuildType.MESON
    url = 'https://www.soft-switch.org/downloads/spandsp/spandsp-%(version)s.tar.gz'
    tarball_checksum = 'cc053ac67e8ac4bb992f258fd94f275a7872df959f6a87763965feabfdcc9465'
    licenses = [License.LGPLv2_1Plus]
    deps = ['tiff']
    # For generating the codec dictionaries
    meson_needs_build_machine_compiler = True
    patches = [
        'spandsp/0001-spandsp-do-not-compile-has_X86FEATURE-symbols.patch',
        'spandsp/0002-Delete-redundant-function-prototype-in-header.patch',
        # upstream commit
        # https://github.com/freeswitch/spandsp/commit/9e00aa6e4718f21ddbac3ebac5248a504380c1f2
        'spandsp/0003-FS-6010-resolve.patch',
        'spandsp/0004-Fix-build-for-windows-using-mingw.patch',
        'spandsp/0005-Add-Meson-build.patch',
    ]

    files_libs = ['libspandsp']
    files_devel = ['include/spandsp', 'include/spandsp.h', '%(libdir)s/pkgconfig/spandsp.pc']

    def post_install(self):
        # Meson does not generate la files
        libtool_la = LibtoolLibrary('spandsp', None, None, None, self.config.libdir, self.config.target_platform, deps=['jpeg', 'tiff'])
        libtool_la.save()
        super().post_install()
