# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
from pathlib import Path

from cerbero.enums import License, Platform
from cerbero.utils import shell


class Recipe(recipe.Recipe):
    name = 'curl'
    version = '8.12.1'
    stype = SourceType.TARBALL
    btype = BuildType.CMAKE
    cmake_generator = 'ninja'
    url = 'https://curl.se/download/curl-8.12.1.tar.gz'
    tarball_checksum = '7b40ea64947e0b440716a4d7f0b7aa56230a5341c8377d7b609649d4aea8dbcf'
    licenses = [{License.CURL: ['COPYING']}]
    deps = ['openssl', 'zlib']
    files_libs = ['libcurl']
    files_devel = ['include/curl', '%(libdir)s/pkgconfig/libcurl.pc']

    can_msvc = True

    configure_options = [
        '-DCURL_BROTLI=OFF ',
        '-DCURL_USE_OPENSSL=ON ',
        '-DBUILD_CURL_EXE=OFF ',
        '-DBUILD_SHARED_LIBS=ON ',
        '-DBUILD_STATIC_LIBS=ON ',
        '-DPERL_EXECUTABLE=OFF ',
        '-DCURL_ZLIB=ON ',
        '-DCURL_ZSTD=OFF ',
        '-DUSE_LIBIDN2=OFF ',
        '-DCURL_USE_LIBPSL=OFF ',
        '-DCURL_USE_LIBSSH2=OFF ',
        '-DBUILD_LIBCURL_DOCS=OFF ',
        '-DBUILD_MISC_DOCS=OFF ',
        '-DUSE_NGHTTP2=OFF',
    ]

    def prepare(self):
        self.configure_options.append(f'-DOPENSSL_ROOT_DIR={self.config.prefix}')
        self.configure_options.append(f'-DZLIB_ROOT={self.config.prefix}')

    async def install(self):
        await super(recipe.Recipe, self).install()

        # Adjust the naming convention
        libdir = Path(self.config.libdir)
        if self.config.target_platform == Platform.WINDOWS:
            if self.using_msvc():
                original_implib = libdir / 'libcurl_imp.lib'
                original_implib.rename(original_implib.with_name('curl.lib'))
                stlib = libdir / 'libcurl.lib'
                stlib.rename(stlib.with_name('libcurl.a'))
            else:
                # Will be regenerated by gen_library_file
                original_implib = libdir / 'libcurl_imp.dll.a'
                original_implib.unlink(missing_ok=True)

    def post_install(self):
        if self.config.platform in (Platform.DARWIN, Platform.IOS):
            # Neither CMake's build script nor Meson is aware the library is
            # built solely statically.
            pcfile = f'{self.config.libdir}/pkgconfig/libcurl.pc'
            shell.replace(pcfile, {'Libs:': 'Libs: -framework SystemConfiguration -framework CoreFoundation -framework CoreServices '})

        super().post_install()
