From 10553c5d3c6949dfd877cf8b9253a7affd5f7cfa Mon Sep 17 00:00:00 2001
From: Philip Withnall <philip@tecnocode.co.uk>
Date: Thu, 4 Jul 2024 19:35:47 +0000
Subject: [PATCH 24/24] Merge branch 'pr/fix_some_windows_testsuite_failures'
 into 'main'

tests: fix some Windows testsuite failures

Closes #3370

See merge request GNOME/glib!4125

(cherry picked from commit 7878938e9aaef7a83ec4c58302b17ddbc080b39b)
---
 gio/tests/meson.build  | 15 +++++++++++++--
 glib/meson.build       | 12 ++++++++----
 glib/tests/meson.build |  3 ++-
 3 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/gio/tests/meson.build b/gio/tests/meson.build
index 9bd561452..106052b35 100644
--- a/gio/tests/meson.build
+++ b/gio/tests/meson.build
@@ -697,7 +697,7 @@ if meson.can_run_host_binaries()
 
   test_gresource = custom_target('test.gresource',
     input : 'test.gresource.xml',
-    depends : test_generated_txt,
+    depends : [test_generated_txt, gspawn_helpers],
     output : 'test.gresource',
     command : [glib_compile_resources,
                compiler_type,
@@ -712,6 +712,7 @@ if meson.can_run_host_binaries()
 
   test_resources2_c = custom_target('test_resources2.c',
     input : 'test3.gresource.xml',
+    depends : [gspawn_helpers],
     output : 'test_resources2.c',
     command : [glib_compile_resources,
                compiler_type,
@@ -725,6 +726,7 @@ if meson.can_run_host_binaries()
 
   test_resources2_h = custom_target('test_resources2.h',
     input : 'test3.gresource.xml',
+    depends : [gspawn_helpers],
     output : 'test_resources2.h',
     command : [glib_compile_resources,
                compiler_type,
@@ -738,7 +740,7 @@ if meson.can_run_host_binaries()
 
   test_resources_c = custom_target('test_resources.c',
     input : 'test2.gresource.xml',
-    depends : big_test_resource,
+    depends : [big_test_resource, gspawn_helpers],
     output : 'test_resources.c',
     command : [glib_compile_resources,
                compiler_type,
@@ -752,6 +754,7 @@ if meson.can_run_host_binaries()
 
   digit_test_resources_c = custom_target('digit_test_resources.c',
     input : '111_digit_test.gresource.xml',
+    depends : [gspawn_helpers],
     output : 'digit_test_resources.c',
     command : [glib_compile_resources,
                compiler_type,
@@ -765,6 +768,7 @@ if meson.can_run_host_binaries()
 
   digit_test_resources_h = custom_target('digit_test_resources.h',
     input : '111_digit_test.gresource.xml',
+    depends : [gspawn_helpers],
     output : 'digit_test_resources.h',
     command : [glib_compile_resources,
                compiler_type,
@@ -805,6 +809,7 @@ if meson.can_run_host_binaries()
   if build_machine.system() == 'linux' and objcopy.found() and objcopy_supports_add_symbol and ld.found()
     test_gresource_binary = custom_target('test5.gresource',
       input : 'test5.gresource.xml',
+      depends : [gspawn_helpers],
       output : 'test5.gresource',
       command : [glib_compile_resources,
                  compiler_type,
@@ -820,6 +825,7 @@ if meson.can_run_host_binaries()
     # Create resource data file
     test_resources_binary_c = custom_target('test_resources_binary.c',
       input : 'test5.gresource.xml',
+      depends : [gspawn_helpers],
       output : 'test_resources_binary.c',
       command : [glib_compile_resources,
                  compiler_type,
@@ -914,6 +920,11 @@ foreach test_name, extra_args : gio_tests
   suite = ['gio'] + extra_args.get('suite', [])
   timeout = suite.contains('slow') ? test_timeout_slow : test_timeout
   local_test_env = test_env
+  depends = [extra_args.get('depends', []), gspawn_helpers]
+
+  foreach program : extra_args.get('extra_programs', [])
+    depends += test_extra_programs_targets[program]
+  endforeach
 
   foreach var, value : extra_args.get('env', {})
     local_test_env.append(var, value)
diff --git a/glib/meson.build b/glib/meson.build
index baad0e806..d94b948aa 100644
--- a/glib/meson.build
+++ b/glib/meson.build
@@ -413,26 +413,30 @@ pkg.generate(libglib,
 )
 meson.override_dependency('glib-2.0', libglib_dep)
 
+# FIXME: This needs to be added to the `depends` of every invocation of
+# glib_compile_resources in the build process. We can drop this when
+# https://github.com/mesonbuild/meson/issues/13385 is fixed.
+gspawn_helpers = []
 # On Windows, glib needs a spawn helper for g_spawn* API
 if host_system == 'windows'
   if host_machine.cpu_family() == 'x86'
-    executable('gspawn-win32-helper', 'gspawn-win32-helper.c',
+    gspawn_helpers += executable('gspawn-win32-helper', 'gspawn-win32-helper.c',
       install : true,
       win_subsystem : 'windows',
       include_directories : configinc,
       dependencies : [libglib_dep])
-    executable('gspawn-win32-helper-console', 'gspawn-win32-helper.c',
+    gspawn_helpers += executable('gspawn-win32-helper-console', 'gspawn-win32-helper.c',
       install : true,
       c_args : ['-DHELPER_CONSOLE'],
       include_directories : configinc,
       dependencies : [libglib_dep])
   else
-    executable('gspawn-win64-helper', 'gspawn-win32-helper.c',
+    gspawn_helpers += executable('gspawn-win64-helper', 'gspawn-win32-helper.c',
       install : true,
       win_subsystem : 'windows',
       include_directories : configinc,
       dependencies : [libglib_dep])
-    executable('gspawn-win64-helper-console', 'gspawn-win32-helper.c',
+    gspawn_helpers += executable('gspawn-win64-helper-console', 'gspawn-win32-helper.c',
       install : true,
       c_args : ['-DHELPER_CONSOLE'],
       include_directories : configinc,
diff --git a/glib/tests/meson.build b/glib/tests/meson.build
index db01b54b4..0bc57063d 100644
--- a/glib/tests/meson.build
+++ b/glib/tests/meson.build
@@ -296,7 +296,8 @@ foreach test_name, extra_args : glib_tests
     install: install,
   )
 
-  suite = ['glib'] + extra_args.get('suite', [])
+  depends = [extra_args.get('depends', []), gspawn_helpers]
+  suite = ['glib', 'core'] + extra_args.get('suite', [])
   timeout = suite.contains('slow') ? test_timeout_slow : test_timeout
   test(test_name, exe,
     env : test_env,
-- 
2.44.0.windows.1

