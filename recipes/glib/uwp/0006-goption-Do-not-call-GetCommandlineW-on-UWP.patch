From a8333e5a888166b84726998d14533d975e09794c Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Wed, 27 May 2020 00:48:52 +0530
Subject: [PATCH 06/25] goption: Do not call GetCommandlineW() on UWP

The function is not available there since there is no such thing as
a 'command-line' or 'command-line argument' on UWP.
---
 glib/goption.c            | 2 +-
 glib/tests/option-argv0.c | 6 ++++--
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/glib/goption.c b/glib/goption.c
index 0b3a05e..1e851b4 100644
--- a/glib/goption.c
+++ b/glib/goption.c
@@ -1868,7 +1868,7 @@ platform_get_argv0 (void)
   base_arg0 = g_path_get_basename (*cmdline);
   g_free (cmdline);
   return base_arg0;
-#elif defined G_OS_WIN32
+#elif defined(G_OS_WIN32) && !defined(G_WINAPI_ONLY_APP)
   const wchar_t *cmdline;
   wchar_t **wargv;
   int wargc;
diff --git a/glib/tests/option-argv0.c b/glib/tests/option-argv0.c
index a18e686..eddffbc 100644
--- a/glib/tests/option-argv0.c
+++ b/glib/tests/option-argv0.c
@@ -51,7 +51,8 @@ test_platform_argv0 (void)
    * is implemented. At the moment that means Linux/Cygwin,
    * (which uses /proc/self/cmdline) or OpenBSD (which uses
    * sysctl and KERN_PROC_ARGS) or Windows (which uses
-   * GetCommandlineW ()). On other platforms the test
+   * GetCommandlineW(), except on UWP where it's not available).
+   * On other platforms the test
    * is not expected to pass, but we'd still want to know
    * how it does (the test code itself doesn't use any platform-specific
    * functionality, the difference is internal to glib, so it's quite
@@ -63,7 +64,8 @@ test_platform_argv0 (void)
 #if !defined HAVE_PROC_SELF_CMDLINE && \
     !defined __OpenBSD__ && \
     !defined __linux && \
-    !defined G_OS_WIN32
+    !defined G_OS_WIN32 && \
+    !defined G_WINAPI_ONLY_APP
   fatal_errors = FALSE;
 #endif
 
-- 
2.38.1

