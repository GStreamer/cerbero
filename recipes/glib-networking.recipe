# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import os
from cerbero.tools.libtool import LibtoolLibrary

class Recipe(recipe.Recipe):
    name = 'glib-networking'
    version = '2.80.0'
    licenses = [{License.LGPLv2Plus: None, License.Misc: ['LICENSE_EXCEPTION']}]
    stype = SourceType.TARBALL
    btype = BuildType.MESON
    url = 'gnome://'
    tarball_checksum = 'd8f4f1aab213179ae3351617b59dab5de6bcc9e785021eee178998ebd4bb3acf'

    # static_modules is now governed by default_library
    # https://gitlab.gnome.org/GNOME/glib-networking/-/commit/270d54a5ef9a3c9cb96997dbe0fbcb329dbf80e8
    meson_options = {'libproxy': 'enabled', 'gnome_proxy': 'disabled',
                     'gnutls': 'disabled', 'openssl': 'enabled'}
    deps = ['glib', 'libproxy']
    # openssl on Linux
    use_system_libs = True

    files_misc = ['%(libdir)s/gio/modules/libgioopenssl%(mext)s']
    files_lang = ['glib-networking']
    files_devel = []

    def prepare(self):
        # Glib doesn't support static libraries on Windows yet
        if self.config.target_platform == Platform.WINDOWS:
            self.library_type = LibraryType.SHARED
        else:
            self.files_devel.append(
                '%(libdir)s/gio/modules/libgioopenssl.a')
        # Pick system openssl if on Linux and not cross-compiling
        if self.config.target_platform != Platform.LINUX or self.config.cross_compiling():
            self.deps.append('openssl')

    def post_install(self):
        if self.config.target_platform != Platform.WINDOWS:
            # Meson does not generate la files
            LibtoolLibrary('gioopenssl', None, None, None,
                    os.path.join(self.config.libdir, 'gio', 'modules'),
                    self.config.target_platform, deps=['ssl', 'crypto']).save()
        super().post_install()
