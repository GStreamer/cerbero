# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python
import shutil

from cerbero.tools.libtool import LibtoolLibrary


class Recipe(recipe.Recipe):
    name = 'libjpeg-turbo'
    version = '3.1.0'
    licenses = [{License.BSD_like: ['LICENSE.md']}]
    stype = SourceType.TARBALL
    btype = BuildType.CMAKE
    library_type = LibraryType.BOTH
    cmake_generator = 'ninja'
    can_msvc = True
    url = 'https://github.com/libjpeg-turbo/libjpeg-turbo/releases/download/%(version)s/libjpeg-turbo-%(version)s.tar.gz'
    tarball_checksum = '9564c72b1dfd1d6fe6274c5f95a8d989b59854575d4bbee44ade7bc17aa9bc93'

    configure_options = [
        '-DWITH_JPEG8=ON',
        '-DWITH_TURBOJPEG=ON'
    ]

    files_libs = ['libjpeg','libturbojpeg']
    files_devel = ['include/jpeglib.h', 'include/jerror.h', 'include/jconfig.h',
                   'include/jmorecfg.h','include/turbojpeg.h', '%(libdir)s/pkgconfig/libjpeg.pc']

    async def install(self):
        await super(recipe.Recipe, self).install()
        # This step must be idempotent, hence why it's done here
        if self.using_msvc():
            shutil.move(
                    os.path.join(self.config.libdir, 'turbojpeg-static.lib'),
                    os.path.join(self.config.libdir, 'libturbojpeg.a'))
            shutil.move(
                    os.path.join(self.config.libdir, 'jpeg-static.lib'),
                    os.path.join(self.config.libdir, 'libjpeg.a'))
            shell.replace(f'{self.config.libdir}/cmake/libjpeg-turbo/libjpeg-turboTargets-{self.build_variant.lower()}.cmake', {'lib/turbojpeg-static.lib:': 'lib/libturbojpeg.a'})
            shell.replace(f'{self.config.libdir}/cmake/libjpeg-turbo/libjpeg-turboTargets-{self.build_variant.lower()}.cmake', {'lib/jpeg-static.lib:': 'lib/libjpeg.a'})

    def post_install(self):
        # Meson does not generate la files
        libtool_la = LibtoolLibrary('libjpeg', None, None, None,
                                    self.config.libdir, self.config.target_platform,
                                    deps=[])
        libtool_la.save()
        libtool_la = LibtoolLibrary('libturbojpeg', None, None, None,
                                    self.config.libdir, self.config.target_platform,
                                    deps=[])
        libtool_la.save()
        super().post_install()
